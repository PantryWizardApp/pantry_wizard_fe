  <head>
    <title>Grocery Store Search</title>
    <%# <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script> %>
    <style> 
    html,
body {
  height: 100%;
  margin: 0;
  padding: 0;
}

#container {

  height: 50%;
  right: 0px;
  display: flex;
  padding: 50px;
 
}
#sidebar {
  flex-basis: 5rem;
  flex-grow: 1;
  padding: 1rem;
  max-width: 30rem;
  height: 100%;
  box-sizing: border-box;
  overflow: auto;
}

#sidebar {
  display: flex;
  flex-direction: column;
}

h2 {
  font-size: 1.5rem;
  margin: 0 0 5px 0;
  flex-grow: 0;
}

ul {
  list-style-type: none;
  padding: 0;
  margin: 0;
  overflow-y: scroll;
  flex-grow: 1;
}

li {
  background-color: #f1f1f1;
  padding: 10px;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  font-size: 1.25rem;
  cursor: pointer;
}

li:nth-child(odd) {
  background-color: #fcfcfc;
}

button {
  width: 100%;
  padding: 1rem;
  flex-grow: 0;
  cursor: pointer;
  background: #1a73e8;
  font-size: 1.5rem;
  color: white;
  border: none;
}

button:hover {
  color: #c5d4f0;
}

button:disabled {
  background-color: #9fc1ee;
  color: #c5d4f0;
  cursor: auto;
}

#map {
  flex-basis: 0;
  flex-grow: 4;
  height: 100%;
}

</style>
  </head>
    <script>
    function initMap() {
      var pyrmont = new google.maps.LatLng(-33.866, 151.196);
    
        map = new google.maps.Map(document.getElementById("map"),{
          center: pyrmont,
        zoom: 17
      })

      var input = document.getElementById("searchTextField")

      let autocomplete = new google.maps.places.Autocomplete(input)

      autocomplete.bindTo('bounds',map)

      let marker = new google.maps.Marker({ 
        map:map
      })
      
      google.maps.event.addListener(autocomplete, 'place_changed',() => {
        let place = autocomplete.getPlace()
      
        console.log(place)

        if(place.geometry.viewport){
          map.fitBounds(place.geometry.viewport)
        }else{
          map.setCenter(place.geometry.location)
          map.setZoom(17)
        }
        marker.setPosition(place.geometry.location)
        marker.setVisible(true)

        var request = {
          location:place.geometry.location, 
          radius: '5000',
          type: ['supermarket']
        }

        service = new google.maps.places.PlacesService(map)

        service.nearbySearch(request,callback, 
         (results, status) => {
           if (status !== "OK" || !results) return;

          addPlaces(results, map);
          }
        );
      })

      }

      function callback(results,status) {
        if (status == google.maps.places.PlacesServiceStatus.OK) {
          for (var i = 0; i < results.length; i++) {
            var place = results[i];
            createMarker(results[i]);
            addPlaces(results)
          }
        }
      }

      function addPlaces(places, map) {
        const placesList = document.getElementById("places");

        for (const place of places) {
        if (place.geometry && place.geometry.location) {
        const li = document.createElement("li");

          li.textContent = place.name;
          placesList.appendChild(li);
          li.addEventListener("click", () => {
            map.setCenter(place.geometry.location)
           });
          }
        }
      }

      function createMarker(place) { 
        var marker = new google.maps.Marker({
          map: map, 
          position: place.geometry.location
        }); 

        google.maps.event.addListener(marker, 'click', function () {
          alert(place.name);
        });
      }
      


window.initMap = initMap; </script>

    <!-- 
      The `defer` attribute causes the callback to execute after the full HTML
      document has been parsed. For non-blocking uses, avoiding race conditions,
      and consistent behavior across browsers, consider loading using Promises.
      See https://developers.google.com/maps/documentation/javascript/load-maps-js-api
      for more information.
      -->
  <script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAPS_API_KEY'] %>&callback=initMap&libraries=places&v=weekly" asnyc defer data-turbolinks-eval="false"></script>
        <body>
            <input id="searchTextField" type="text" size="50">
          <div id="container">
            <div id="map"></div>
              <div id="sidebar">
        <h2>Results</h2>
        <ul id="places"></ul>
      </div>
          </div>
  </body>

